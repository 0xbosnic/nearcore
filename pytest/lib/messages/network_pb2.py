# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: network.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rnetwork.proto\x12\x07network\"\x1a\n\tPublicKey\x12\r\n\x05\x62orsh\x18\x01 \x01(\x0c\"\x19\n\x08PeerInfo\x12\r\n\x05\x62orsh\x18\x01 \x01(\x0c\"\x1a\n\nCryptoHash\x12\x0c\n\x04hash\x18\x01 \x01(\x0c\"\x15\n\x04\x45\x64ge\x12\r\n\x05\x62orsh\x18\x01 \x01(\x0c\" \n\x0fPartialEdgeInfo\x12\r\n\x05\x62orsh\x18\x01 \x01(\x0c\" \n\x0f\x41nnounceAccount\x12\r\n\x05\x62orsh\x18\x01 \x01(\x0c\"\x16\n\x05\x42lock\x12\r\n\x05\x62orsh\x18\x01 \x01(\x0c\"\x1c\n\x0b\x42lockHeader\x12\r\n\x05\x62orsh\x18\x01 \x01(\x0c\"@\n\tGenesisId\x12\x10\n\x08\x63hain_id\x18\x01 \x01(\t\x12!\n\x04hash\x18\x02 \x01(\x0b\x32\x13.network.CryptoHash\"q\n\rPeerChainInfo\x12&\n\ngenesis_id\x18\x01 \x01(\x0b\x32\x12.network.GenesisId\x12\x0e\n\x06height\x18\x02 \x01(\x04\x12\x16\n\x0etracked_shards\x18\x03 \x03(\x04\x12\x10\n\x08\x61rchival\x18\x04 \x01(\x08\"\xa3\x02\n\tHandshake\x12\x18\n\x10protocol_version\x18\x01 \x01(\r\x12 \n\x18oldest_supported_version\x18\x02 \x01(\r\x12*\n\x0esender_peer_id\x18\x03 \x01(\x0b\x32\x12.network.PublicKey\x12*\n\x0etarget_peer_id\x18\x04 \x01(\x0b\x32\x12.network.PublicKey\x12\x1a\n\x12sender_listen_port\x18\x05 \x01(\r\x12\x31\n\x11sender_chain_info\x18\x06 \x01(\x0b\x32\x16.network.PeerChainInfo\x12\x33\n\x11partial_edge_info\x18\x07 \x01(\x0b\x32\x18.network.PartialEdgeInfo\"\xa1\x02\n\x10HandshakeFailure\x12\x30\n\x06reason\x18\x01 \x01(\x0e\x32 .network.HandshakeFailure.Reason\x12$\n\tpeer_info\x18\x02 \x01(\x0b\x32\x11.network.PeerInfo\x12&\n\ngenesis_id\x18\x03 \x01(\x0b\x32\x12.network.GenesisId\x12\x0f\n\x07version\x18\x04 \x01(\r\x12 \n\x18oldest_supported_version\x18\x05 \x01(\r\"Z\n\x06Reason\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x1b\n\x17ProtocolVersionMismatch\x10\x01\x12\x13\n\x0fGenesisMismatch\x10\x02\x12\x11\n\rInvalidTarget\x10\x03\"\'\n\x08LastEdge\x12\x1b\n\x04\x65\x64ge\x18\x01 \x01(\x0b\x32\r.network.Edge\"^\n\x12RoutingTableUpdate\x12\x1c\n\x05\x65\x64ges\x18\x01 \x03(\x0b\x32\r.network.Edge\x12*\n\x08\x61\x63\x63ounts\x18\x02 \x03(\x0b\x32\x18.network.AnnounceAccount\"I\n\x12UpdateNonceRequest\x12\x33\n\x11partial_edge_info\x18\x01 \x01(\x0b\x32\x18.network.PartialEdgeInfo\"2\n\x13UpdateNonceResponse\x12\x1b\n\x04\x65\x64ge\x18\x01 \x01(\x0b\x32\r.network.Edge\"\x0e\n\x0cPeersRequest\"1\n\rPeersResponse\x12 \n\x05peers\x18\x01 \x03(\x0b\x32\x11.network.PeerInfo\"@\n\x13\x42lockHeadersRequest\x12)\n\x0c\x62lock_hashes\x18\x01 \x03(\x0b\x32\x13.network.CryptoHash\"C\n\x14\x42lockHeadersResponse\x12+\n\rblock_headers\x18\x01 \x03(\x0b\x32\x14.network.BlockHeader\"7\n\x0c\x42lockRequest\x12\'\n\nblock_hash\x18\x01 \x01(\x0b\x32\x13.network.CryptoHash\".\n\rBlockResponse\x12\x1d\n\x05\x62lock\x18\x01 \x01(\x0b\x32\x0e.network.Block\"\"\n\x11SignedTransaction\x12\r\n\x05\x62orsh\x18\x01 \x01(\x0c\"\x1e\n\rRoutedMessage\x12\r\n\x05\x62orsh\x18\x01 \x01(\x0c\"\x0c\n\nDisconnect\"\x1a\n\tChallenge\x12\r\n\x05\x62orsh\x18\x01 \x01(\x0c\"9\n\x10\x45pochSyncRequest\x12%\n\x08\x65poch_id\x18\x01 \x01(\x0b\x32\x13.network.CryptoHash\"\"\n\x11\x45pochSyncResponse\x12\r\n\x05\x62orsh\x18\x01 \x01(\x0c\"E\n\x1c\x45pochSyncFinalizationRequest\x12%\n\x08\x65poch_id\x18\x01 \x01(\x0b\x32\x13.network.CryptoHash\".\n\x1d\x45pochSyncFinalizationResponse\x12\r\n\x05\x62orsh\x18\x01 \x01(\x0c\"\x1e\n\rRoutingSyncV2\x12\r\n\x05\x62orsh\x18\x01 \x01(\x0c\"\xb7\t\n\x0bPeerMessage\x12\'\n\thandshake\x18\x04 \x01(\x0b\x32\x12.network.HandshakeH\x00\x12\x36\n\x11handshake_failure\x18\x05 \x01(\x0b\x32\x19.network.HandshakeFailureH\x00\x12&\n\tlast_edge\x18\x06 \x01(\x0b\x32\x11.network.LastEdgeH\x00\x12\x39\n\x12sync_routing_table\x18\x07 \x01(\x0b\x32\x1b.network.RoutingTableUpdateH\x00\x12;\n\x14update_nonce_request\x18\x08 \x01(\x0b\x32\x1b.network.UpdateNonceRequestH\x00\x12=\n\x15update_nonce_response\x18\t \x01(\x0b\x32\x1c.network.UpdateNonceResponseH\x00\x12.\n\rpeers_request\x18\n \x01(\x0b\x32\x15.network.PeersRequestH\x00\x12\x30\n\x0epeers_response\x18\x0b \x01(\x0b\x32\x16.network.PeersResponseH\x00\x12=\n\x15\x62lock_headers_request\x18\x0c \x01(\x0b\x32\x1c.network.BlockHeadersRequestH\x00\x12?\n\x16\x62lock_headers_response\x18\r \x01(\x0b\x32\x1d.network.BlockHeadersResponseH\x00\x12.\n\rblock_request\x18\x0e \x01(\x0b\x32\x15.network.BlockRequestH\x00\x12\x30\n\x0e\x62lock_response\x18\x0f \x01(\x0b\x32\x16.network.BlockResponseH\x00\x12\x31\n\x0btransaction\x18\x10 \x01(\x0b\x32\x1a.network.SignedTransactionH\x00\x12(\n\x06routed\x18\x11 \x01(\x0b\x32\x16.network.RoutedMessageH\x00\x12)\n\ndisconnect\x18\x12 \x01(\x0b\x32\x13.network.DisconnectH\x00\x12\'\n\tchallenge\x18\x13 \x01(\x0b\x32\x12.network.ChallengeH\x00\x12\x37\n\x12\x65poch_sync_request\x18\x14 \x01(\x0b\x32\x19.network.EpochSyncRequestH\x00\x12\x39\n\x13\x65poch_sync_response\x18\x15 \x01(\x0b\x32\x1a.network.EpochSyncResponseH\x00\x12P\n\x1f\x65poch_sync_finalization_request\x18\x16 \x01(\x0b\x32%.network.EpochSyncFinalizationRequestH\x00\x12R\n epoch_sync_finalization_response\x18\x17 \x01(\x0b\x32&.network.EpochSyncFinalizationResponseH\x00\x12\x37\n\x15routing_table_sync_v2\x18\x18 \x01(\x0b\x32\x16.network.RoutingSyncV2H\x00\x42\x0e\n\x0cmessage_typeJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03J\x04\x08\x03\x10\x04\x62\x06proto3')



_PUBLICKEY = DESCRIPTOR.message_types_by_name['PublicKey']
_PEERINFO = DESCRIPTOR.message_types_by_name['PeerInfo']
_CRYPTOHASH = DESCRIPTOR.message_types_by_name['CryptoHash']
_EDGE = DESCRIPTOR.message_types_by_name['Edge']
_PARTIALEDGEINFO = DESCRIPTOR.message_types_by_name['PartialEdgeInfo']
_ANNOUNCEACCOUNT = DESCRIPTOR.message_types_by_name['AnnounceAccount']
_BLOCK = DESCRIPTOR.message_types_by_name['Block']
_BLOCKHEADER = DESCRIPTOR.message_types_by_name['BlockHeader']
_GENESISID = DESCRIPTOR.message_types_by_name['GenesisId']
_PEERCHAININFO = DESCRIPTOR.message_types_by_name['PeerChainInfo']
_HANDSHAKE = DESCRIPTOR.message_types_by_name['Handshake']
_HANDSHAKEFAILURE = DESCRIPTOR.message_types_by_name['HandshakeFailure']
_LASTEDGE = DESCRIPTOR.message_types_by_name['LastEdge']
_ROUTINGTABLEUPDATE = DESCRIPTOR.message_types_by_name['RoutingTableUpdate']
_UPDATENONCEREQUEST = DESCRIPTOR.message_types_by_name['UpdateNonceRequest']
_UPDATENONCERESPONSE = DESCRIPTOR.message_types_by_name['UpdateNonceResponse']
_PEERSREQUEST = DESCRIPTOR.message_types_by_name['PeersRequest']
_PEERSRESPONSE = DESCRIPTOR.message_types_by_name['PeersResponse']
_BLOCKHEADERSREQUEST = DESCRIPTOR.message_types_by_name['BlockHeadersRequest']
_BLOCKHEADERSRESPONSE = DESCRIPTOR.message_types_by_name['BlockHeadersResponse']
_BLOCKREQUEST = DESCRIPTOR.message_types_by_name['BlockRequest']
_BLOCKRESPONSE = DESCRIPTOR.message_types_by_name['BlockResponse']
_SIGNEDTRANSACTION = DESCRIPTOR.message_types_by_name['SignedTransaction']
_ROUTEDMESSAGE = DESCRIPTOR.message_types_by_name['RoutedMessage']
_DISCONNECT = DESCRIPTOR.message_types_by_name['Disconnect']
_CHALLENGE = DESCRIPTOR.message_types_by_name['Challenge']
_EPOCHSYNCREQUEST = DESCRIPTOR.message_types_by_name['EpochSyncRequest']
_EPOCHSYNCRESPONSE = DESCRIPTOR.message_types_by_name['EpochSyncResponse']
_EPOCHSYNCFINALIZATIONREQUEST = DESCRIPTOR.message_types_by_name['EpochSyncFinalizationRequest']
_EPOCHSYNCFINALIZATIONRESPONSE = DESCRIPTOR.message_types_by_name['EpochSyncFinalizationResponse']
_ROUTINGSYNCV2 = DESCRIPTOR.message_types_by_name['RoutingSyncV2']
_PEERMESSAGE = DESCRIPTOR.message_types_by_name['PeerMessage']
_HANDSHAKEFAILURE_REASON = _HANDSHAKEFAILURE.enum_types_by_name['Reason']
PublicKey = _reflection.GeneratedProtocolMessageType('PublicKey', (_message.Message,), {
  'DESCRIPTOR' : _PUBLICKEY,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.PublicKey)
  })
_sym_db.RegisterMessage(PublicKey)

PeerInfo = _reflection.GeneratedProtocolMessageType('PeerInfo', (_message.Message,), {
  'DESCRIPTOR' : _PEERINFO,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.PeerInfo)
  })
_sym_db.RegisterMessage(PeerInfo)

CryptoHash = _reflection.GeneratedProtocolMessageType('CryptoHash', (_message.Message,), {
  'DESCRIPTOR' : _CRYPTOHASH,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.CryptoHash)
  })
_sym_db.RegisterMessage(CryptoHash)

Edge = _reflection.GeneratedProtocolMessageType('Edge', (_message.Message,), {
  'DESCRIPTOR' : _EDGE,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.Edge)
  })
_sym_db.RegisterMessage(Edge)

PartialEdgeInfo = _reflection.GeneratedProtocolMessageType('PartialEdgeInfo', (_message.Message,), {
  'DESCRIPTOR' : _PARTIALEDGEINFO,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.PartialEdgeInfo)
  })
_sym_db.RegisterMessage(PartialEdgeInfo)

AnnounceAccount = _reflection.GeneratedProtocolMessageType('AnnounceAccount', (_message.Message,), {
  'DESCRIPTOR' : _ANNOUNCEACCOUNT,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.AnnounceAccount)
  })
_sym_db.RegisterMessage(AnnounceAccount)

Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {
  'DESCRIPTOR' : _BLOCK,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.Block)
  })
_sym_db.RegisterMessage(Block)

BlockHeader = _reflection.GeneratedProtocolMessageType('BlockHeader', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKHEADER,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.BlockHeader)
  })
_sym_db.RegisterMessage(BlockHeader)

GenesisId = _reflection.GeneratedProtocolMessageType('GenesisId', (_message.Message,), {
  'DESCRIPTOR' : _GENESISID,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.GenesisId)
  })
_sym_db.RegisterMessage(GenesisId)

PeerChainInfo = _reflection.GeneratedProtocolMessageType('PeerChainInfo', (_message.Message,), {
  'DESCRIPTOR' : _PEERCHAININFO,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.PeerChainInfo)
  })
_sym_db.RegisterMessage(PeerChainInfo)

Handshake = _reflection.GeneratedProtocolMessageType('Handshake', (_message.Message,), {
  'DESCRIPTOR' : _HANDSHAKE,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.Handshake)
  })
_sym_db.RegisterMessage(Handshake)

HandshakeFailure = _reflection.GeneratedProtocolMessageType('HandshakeFailure', (_message.Message,), {
  'DESCRIPTOR' : _HANDSHAKEFAILURE,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.HandshakeFailure)
  })
_sym_db.RegisterMessage(HandshakeFailure)

LastEdge = _reflection.GeneratedProtocolMessageType('LastEdge', (_message.Message,), {
  'DESCRIPTOR' : _LASTEDGE,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.LastEdge)
  })
_sym_db.RegisterMessage(LastEdge)

RoutingTableUpdate = _reflection.GeneratedProtocolMessageType('RoutingTableUpdate', (_message.Message,), {
  'DESCRIPTOR' : _ROUTINGTABLEUPDATE,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.RoutingTableUpdate)
  })
_sym_db.RegisterMessage(RoutingTableUpdate)

UpdateNonceRequest = _reflection.GeneratedProtocolMessageType('UpdateNonceRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATENONCEREQUEST,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.UpdateNonceRequest)
  })
_sym_db.RegisterMessage(UpdateNonceRequest)

UpdateNonceResponse = _reflection.GeneratedProtocolMessageType('UpdateNonceResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATENONCERESPONSE,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.UpdateNonceResponse)
  })
_sym_db.RegisterMessage(UpdateNonceResponse)

PeersRequest = _reflection.GeneratedProtocolMessageType('PeersRequest', (_message.Message,), {
  'DESCRIPTOR' : _PEERSREQUEST,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.PeersRequest)
  })
_sym_db.RegisterMessage(PeersRequest)

PeersResponse = _reflection.GeneratedProtocolMessageType('PeersResponse', (_message.Message,), {
  'DESCRIPTOR' : _PEERSRESPONSE,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.PeersResponse)
  })
_sym_db.RegisterMessage(PeersResponse)

BlockHeadersRequest = _reflection.GeneratedProtocolMessageType('BlockHeadersRequest', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKHEADERSREQUEST,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.BlockHeadersRequest)
  })
_sym_db.RegisterMessage(BlockHeadersRequest)

BlockHeadersResponse = _reflection.GeneratedProtocolMessageType('BlockHeadersResponse', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKHEADERSRESPONSE,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.BlockHeadersResponse)
  })
_sym_db.RegisterMessage(BlockHeadersResponse)

BlockRequest = _reflection.GeneratedProtocolMessageType('BlockRequest', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKREQUEST,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.BlockRequest)
  })
_sym_db.RegisterMessage(BlockRequest)

BlockResponse = _reflection.GeneratedProtocolMessageType('BlockResponse', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKRESPONSE,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.BlockResponse)
  })
_sym_db.RegisterMessage(BlockResponse)

SignedTransaction = _reflection.GeneratedProtocolMessageType('SignedTransaction', (_message.Message,), {
  'DESCRIPTOR' : _SIGNEDTRANSACTION,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.SignedTransaction)
  })
_sym_db.RegisterMessage(SignedTransaction)

RoutedMessage = _reflection.GeneratedProtocolMessageType('RoutedMessage', (_message.Message,), {
  'DESCRIPTOR' : _ROUTEDMESSAGE,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.RoutedMessage)
  })
_sym_db.RegisterMessage(RoutedMessage)

Disconnect = _reflection.GeneratedProtocolMessageType('Disconnect', (_message.Message,), {
  'DESCRIPTOR' : _DISCONNECT,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.Disconnect)
  })
_sym_db.RegisterMessage(Disconnect)

Challenge = _reflection.GeneratedProtocolMessageType('Challenge', (_message.Message,), {
  'DESCRIPTOR' : _CHALLENGE,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.Challenge)
  })
_sym_db.RegisterMessage(Challenge)

EpochSyncRequest = _reflection.GeneratedProtocolMessageType('EpochSyncRequest', (_message.Message,), {
  'DESCRIPTOR' : _EPOCHSYNCREQUEST,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.EpochSyncRequest)
  })
_sym_db.RegisterMessage(EpochSyncRequest)

EpochSyncResponse = _reflection.GeneratedProtocolMessageType('EpochSyncResponse', (_message.Message,), {
  'DESCRIPTOR' : _EPOCHSYNCRESPONSE,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.EpochSyncResponse)
  })
_sym_db.RegisterMessage(EpochSyncResponse)

EpochSyncFinalizationRequest = _reflection.GeneratedProtocolMessageType('EpochSyncFinalizationRequest', (_message.Message,), {
  'DESCRIPTOR' : _EPOCHSYNCFINALIZATIONREQUEST,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.EpochSyncFinalizationRequest)
  })
_sym_db.RegisterMessage(EpochSyncFinalizationRequest)

EpochSyncFinalizationResponse = _reflection.GeneratedProtocolMessageType('EpochSyncFinalizationResponse', (_message.Message,), {
  'DESCRIPTOR' : _EPOCHSYNCFINALIZATIONRESPONSE,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.EpochSyncFinalizationResponse)
  })
_sym_db.RegisterMessage(EpochSyncFinalizationResponse)

RoutingSyncV2 = _reflection.GeneratedProtocolMessageType('RoutingSyncV2', (_message.Message,), {
  'DESCRIPTOR' : _ROUTINGSYNCV2,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.RoutingSyncV2)
  })
_sym_db.RegisterMessage(RoutingSyncV2)

PeerMessage = _reflection.GeneratedProtocolMessageType('PeerMessage', (_message.Message,), {
  'DESCRIPTOR' : _PEERMESSAGE,
  '__module__' : 'network_pb2'
  # @@protoc_insertion_point(class_scope:network.PeerMessage)
  })
_sym_db.RegisterMessage(PeerMessage)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _PUBLICKEY._serialized_start=26
  _PUBLICKEY._serialized_end=52
  _PEERINFO._serialized_start=54
  _PEERINFO._serialized_end=79
  _CRYPTOHASH._serialized_start=81
  _CRYPTOHASH._serialized_end=107
  _EDGE._serialized_start=109
  _EDGE._serialized_end=130
  _PARTIALEDGEINFO._serialized_start=132
  _PARTIALEDGEINFO._serialized_end=164
  _ANNOUNCEACCOUNT._serialized_start=166
  _ANNOUNCEACCOUNT._serialized_end=198
  _BLOCK._serialized_start=200
  _BLOCK._serialized_end=222
  _BLOCKHEADER._serialized_start=224
  _BLOCKHEADER._serialized_end=252
  _GENESISID._serialized_start=254
  _GENESISID._serialized_end=318
  _PEERCHAININFO._serialized_start=320
  _PEERCHAININFO._serialized_end=433
  _HANDSHAKE._serialized_start=436
  _HANDSHAKE._serialized_end=727
  _HANDSHAKEFAILURE._serialized_start=730
  _HANDSHAKEFAILURE._serialized_end=1019
  _HANDSHAKEFAILURE_REASON._serialized_start=929
  _HANDSHAKEFAILURE_REASON._serialized_end=1019
  _LASTEDGE._serialized_start=1021
  _LASTEDGE._serialized_end=1060
  _ROUTINGTABLEUPDATE._serialized_start=1062
  _ROUTINGTABLEUPDATE._serialized_end=1156
  _UPDATENONCEREQUEST._serialized_start=1158
  _UPDATENONCEREQUEST._serialized_end=1231
  _UPDATENONCERESPONSE._serialized_start=1233
  _UPDATENONCERESPONSE._serialized_end=1283
  _PEERSREQUEST._serialized_start=1285
  _PEERSREQUEST._serialized_end=1299
  _PEERSRESPONSE._serialized_start=1301
  _PEERSRESPONSE._serialized_end=1350
  _BLOCKHEADERSREQUEST._serialized_start=1352
  _BLOCKHEADERSREQUEST._serialized_end=1416
  _BLOCKHEADERSRESPONSE._serialized_start=1418
  _BLOCKHEADERSRESPONSE._serialized_end=1485
  _BLOCKREQUEST._serialized_start=1487
  _BLOCKREQUEST._serialized_end=1542
  _BLOCKRESPONSE._serialized_start=1544
  _BLOCKRESPONSE._serialized_end=1590
  _SIGNEDTRANSACTION._serialized_start=1592
  _SIGNEDTRANSACTION._serialized_end=1626
  _ROUTEDMESSAGE._serialized_start=1628
  _ROUTEDMESSAGE._serialized_end=1658
  _DISCONNECT._serialized_start=1660
  _DISCONNECT._serialized_end=1672
  _CHALLENGE._serialized_start=1674
  _CHALLENGE._serialized_end=1700
  _EPOCHSYNCREQUEST._serialized_start=1702
  _EPOCHSYNCREQUEST._serialized_end=1759
  _EPOCHSYNCRESPONSE._serialized_start=1761
  _EPOCHSYNCRESPONSE._serialized_end=1795
  _EPOCHSYNCFINALIZATIONREQUEST._serialized_start=1797
  _EPOCHSYNCFINALIZATIONREQUEST._serialized_end=1866
  _EPOCHSYNCFINALIZATIONRESPONSE._serialized_start=1868
  _EPOCHSYNCFINALIZATIONRESPONSE._serialized_end=1914
  _ROUTINGSYNCV2._serialized_start=1916
  _ROUTINGSYNCV2._serialized_end=1946
  _PEERMESSAGE._serialized_start=1949
  _PEERMESSAGE._serialized_end=3156
# @@protoc_insertion_point(module_scope)
